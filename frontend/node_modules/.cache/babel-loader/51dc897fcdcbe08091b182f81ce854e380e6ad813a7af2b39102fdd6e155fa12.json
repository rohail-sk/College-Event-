{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = \"http://localhost:8081/api\"; // adjust if needed\n\nexport const login = data => axios.post(`${BASE_URL}/auth/login`, data);\nexport const register = data => axios.post(`${BASE_URL}/auth/register`, data);\nexport const registerFaculty = data => axios.post(`${BASE_URL}/auth/add-faculty`, data);\n\n// Fetch all upcoming events\nexport const getEvents = () => axios.get(`${BASE_URL}/events/all-events`);\n\n// Faculty requests event (sends info to admin for approval)\nexport const requestEvent = data => axios.post(`${BASE_URL}/events/request-event`, data);\n\n// Admin: get all requested events\nexport const getRequestedEvents = () => axios.get(`${BASE_URL}/events/all-requested-events`);\n\n// Admin: approve a requested event\nexport const approveEventRequest = requestId => axios.post(`${BASE_URL}/events/approve-event/${requestId}`);\n\n// Admin: reject a requested event\nexport const rejectEventRequest = requestId => axios.post(`${BASE_URL}/events/reject-event/${requestId}`);\n\n// Admin: modify a requested event with a remark\nexport const addRemarkToEvent = (requestId, requestBody) => axios.put(`${BASE_URL}/admin/modify-event/${requestId}`, requestBody);\n\n// Admin: create event directly (bypassing faculty request)\nexport const adminCreateEvent = data => axios.post(`${BASE_URL}/events/create-event`, data);\n\n// After admin approval, faculty creates event (final registration)\nexport const createEvent = data => axios.post(`${BASE_URL}/events/create-event`, data);\n\n// Faculty: edit an existing event request\nexport const editEventRequest = (eventId, eventData) => axios.put(`${BASE_URL}/events/edit-existing-event/${eventId}`, eventData);\n\n// Faculty: mark remark as notified/read to prevent repeated notifications\nexport const markRemarkAsNotified = eventId => {\n  // Make sure we have a valid event ID\n  if (!eventId) {\n    console.error('Invalid eventId provided to markRemarkAsNotified:', eventId);\n    return Promise.reject(new Error('Invalid event ID'));\n  }\n  return axios.put(`${BASE_URL}/events/mark-remark-notified/${eventId}`, {\n    remarkNotified: true\n  }).catch(error => {\n    console.error('Failed to mark remark as notified:', error);\n    throw error;\n  });\n};\n\n// Fetch all events requested by a specific faculty\nexport const getEventsByFacultyId = facultyId => axios.get(`${BASE_URL}/events/all-requested-events/${facultyId}`);\n\n// Cancel an event\nexport const cancelEvent = eventId => axios.delete(`${BASE_URL}/events/delete-existing-event/${eventId}`);\n\n// // Fetch events registered by a student (expects student id or email)\n// export const getRegisteredEvents = (studentIdOrEmail) => axios.get(`${BASE_URL}/events/registered`, { params: { student: studentIdOrEmail } });\n\n// // Register for an event (expects eventId and student info)\n// export const registerForEvent = (data) => axios.post(`${BASE_URL}/events/register`, data);\n\n// // Cancel event registration (expects eventId and student info)\n// export const cancelEventRegistration = (data) => axios.post(`${BASE_URL}/events/cancel`, data);","map":{"version":3,"names":["axios","BASE_URL","login","data","post","register","registerFaculty","getEvents","get","requestEvent","getRequestedEvents","approveEventRequest","requestId","rejectEventRequest","addRemarkToEvent","requestBody","put","adminCreateEvent","createEvent","editEventRequest","eventId","eventData","markRemarkAsNotified","console","error","Promise","reject","Error","remarkNotified","catch","getEventsByFacultyId","facultyId","cancelEvent","delete"],"sources":["C:/Users/Rohail/Desktop/3rd year project/college-event/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = \"http://localhost:8081/api\"; // adjust if needed\n\nexport const login = (data) => axios.post(`${BASE_URL}/auth/login`, data);\nexport const register = (data) => axios.post(`${BASE_URL}/auth/register`, data);\nexport const registerFaculty = (data) => axios.post(`${BASE_URL}/auth/add-faculty`, data);\n\n// Fetch all upcoming events\nexport const getEvents = () => axios.get(`${BASE_URL}/events/all-events`);\n\n// Faculty requests event (sends info to admin for approval)\nexport const requestEvent = (data) => axios.post(`${BASE_URL}/events/request-event`, data);\n\n// Admin: get all requested events\nexport const getRequestedEvents = () => axios.get(`${BASE_URL}/events/all-requested-events`);\n\n// Admin: approve a requested event\nexport const approveEventRequest = (requestId) => axios.post(`${BASE_URL}/events/approve-event/${requestId}`);\n\n// Admin: reject a requested event\nexport const rejectEventRequest = (requestId) => axios.post(`${BASE_URL}/events/reject-event/${requestId}`);\n\n// Admin: modify a requested event with a remark\nexport const addRemarkToEvent = (requestId, requestBody) => axios.put(`${BASE_URL}/admin/modify-event/${requestId}`, requestBody);\n\n// Admin: create event directly (bypassing faculty request)\nexport const adminCreateEvent = (data) => axios.post(`${BASE_URL}/events/create-event`, data);\n\n// After admin approval, faculty creates event (final registration)\nexport const createEvent = (data) => axios.post(`${BASE_URL}/events/create-event`, data);\n\n// Faculty: edit an existing event request\nexport const editEventRequest = (eventId, eventData) => axios.put(`${BASE_URL}/events/edit-existing-event/${eventId}`, eventData);\n\n// Faculty: mark remark as notified/read to prevent repeated notifications\nexport const markRemarkAsNotified = (eventId) => {\n  // Make sure we have a valid event ID\n  if (!eventId) {\n    console.error('Invalid eventId provided to markRemarkAsNotified:', eventId);\n    return Promise.reject(new Error('Invalid event ID'));\n  }\n  return axios.put(`${BASE_URL}/events/mark-remark-notified/${eventId}`, { remarkNotified: true })\n    .catch(error => {\n      console.error('Failed to mark remark as notified:', error);\n      throw error;\n    });\n};\n\n// Fetch all events requested by a specific faculty\nexport const getEventsByFacultyId = (facultyId) => axios.get(`${BASE_URL}/events/all-requested-events/${facultyId}`);\n\n// Cancel an event\nexport const cancelEvent = (eventId) => axios.delete(`${BASE_URL}/events/delete-existing-event/${eventId}`);\n\n// // Fetch events registered by a student (expects student id or email)\n// export const getRegisteredEvents = (studentIdOrEmail) => axios.get(`${BASE_URL}/events/registered`, { params: { student: studentIdOrEmail } });\n\n// // Register for an event (expects eventId and student info)\n// export const registerForEvent = (data) => axios.post(`${BASE_URL}/events/register`, data);\n\n// // Cancel event registration (expects eventId and student info)\n// export const cancelEventRegistration = (data) => axios.post(`${BASE_URL}/events/cancel`, data);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,2BAA2B,CAAC,CAAC;;AAE9C,OAAO,MAAMC,KAAK,GAAIC,IAAI,IAAKH,KAAK,CAACI,IAAI,CAAC,GAAGH,QAAQ,aAAa,EAAEE,IAAI,CAAC;AACzE,OAAO,MAAME,QAAQ,GAAIF,IAAI,IAAKH,KAAK,CAACI,IAAI,CAAC,GAAGH,QAAQ,gBAAgB,EAAEE,IAAI,CAAC;AAC/E,OAAO,MAAMG,eAAe,GAAIH,IAAI,IAAKH,KAAK,CAACI,IAAI,CAAC,GAAGH,QAAQ,mBAAmB,EAAEE,IAAI,CAAC;;AAEzF;AACA,OAAO,MAAMI,SAAS,GAAGA,CAAA,KAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,QAAQ,oBAAoB,CAAC;;AAEzE;AACA,OAAO,MAAMQ,YAAY,GAAIN,IAAI,IAAKH,KAAK,CAACI,IAAI,CAAC,GAAGH,QAAQ,uBAAuB,EAAEE,IAAI,CAAC;;AAE1F;AACA,OAAO,MAAMO,kBAAkB,GAAGA,CAAA,KAAMV,KAAK,CAACQ,GAAG,CAAC,GAAGP,QAAQ,8BAA8B,CAAC;;AAE5F;AACA,OAAO,MAAMU,mBAAmB,GAAIC,SAAS,IAAKZ,KAAK,CAACI,IAAI,CAAC,GAAGH,QAAQ,yBAAyBW,SAAS,EAAE,CAAC;;AAE7G;AACA,OAAO,MAAMC,kBAAkB,GAAID,SAAS,IAAKZ,KAAK,CAACI,IAAI,CAAC,GAAGH,QAAQ,wBAAwBW,SAAS,EAAE,CAAC;;AAE3G;AACA,OAAO,MAAME,gBAAgB,GAAGA,CAACF,SAAS,EAAEG,WAAW,KAAKf,KAAK,CAACgB,GAAG,CAAC,GAAGf,QAAQ,uBAAuBW,SAAS,EAAE,EAAEG,WAAW,CAAC;;AAEjI;AACA,OAAO,MAAME,gBAAgB,GAAId,IAAI,IAAKH,KAAK,CAACI,IAAI,CAAC,GAAGH,QAAQ,sBAAsB,EAAEE,IAAI,CAAC;;AAE7F;AACA,OAAO,MAAMe,WAAW,GAAIf,IAAI,IAAKH,KAAK,CAACI,IAAI,CAAC,GAAGH,QAAQ,sBAAsB,EAAEE,IAAI,CAAC;;AAExF;AACA,OAAO,MAAMgB,gBAAgB,GAAGA,CAACC,OAAO,EAAEC,SAAS,KAAKrB,KAAK,CAACgB,GAAG,CAAC,GAAGf,QAAQ,+BAA+BmB,OAAO,EAAE,EAAEC,SAAS,CAAC;;AAEjI;AACA,OAAO,MAAMC,oBAAoB,GAAIF,OAAO,IAAK;EAC/C;EACA,IAAI,CAACA,OAAO,EAAE;IACZG,OAAO,CAACC,KAAK,CAAC,mDAAmD,EAAEJ,OAAO,CAAC;IAC3E,OAAOK,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,kBAAkB,CAAC,CAAC;EACtD;EACA,OAAO3B,KAAK,CAACgB,GAAG,CAAC,GAAGf,QAAQ,gCAAgCmB,OAAO,EAAE,EAAE;IAAEQ,cAAc,EAAE;EAAK,CAAC,CAAC,CAC7FC,KAAK,CAACL,KAAK,IAAI;IACdD,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAMA,KAAK;EACb,CAAC,CAAC;AACN,CAAC;;AAED;AACA,OAAO,MAAMM,oBAAoB,GAAIC,SAAS,IAAK/B,KAAK,CAACQ,GAAG,CAAC,GAAGP,QAAQ,gCAAgC8B,SAAS,EAAE,CAAC;;AAEpH;AACA,OAAO,MAAMC,WAAW,GAAIZ,OAAO,IAAKpB,KAAK,CAACiC,MAAM,CAAC,GAAGhC,QAAQ,iCAAiCmB,OAAO,EAAE,CAAC;;AAE3G;AACA;;AAEA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}