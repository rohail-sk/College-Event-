{"ast":null,"code":"import axios from'axios';const BASE_URL=\"http://localhost:8081/api\";// adjust if needed\nexport const login=data=>axios.post(`${BASE_URL}/auth/login`,data);export const register=data=>axios.post(`${BASE_URL}/auth/register`,data);// Fetch all upcoming events\nexport const getEvents=()=>axios.get(`${BASE_URL}/events/all-events`);// Faculty requests event (sends info to admin for approval)\nexport const requestEvent=data=>axios.post(`${BASE_URL}/event-proposal/request-event`,data);// Admin: get all requested events\nexport const getRequestedEvents=()=>axios.get(`${BASE_URL}/event-proposal/all-requested-events`);// Admin: approve a requested event\nexport const approveEventRequest=requestId=>axios.post(`${BASE_URL}/event-proposal/approve-event/${requestId}`);// After admin approval, faculty creates event (final registration)\nexport const createEvent=data=>axios.post(`${BASE_URL}/events/create-event`,data);// // Fetch events registered by a student (expects student id or email)\n// export const getRegisteredEvents = (studentIdOrEmail) => axios.get(`${BASE_URL}/events/registered`, { params: { student: studentIdOrEmail } });\n// // Register for an event (expects eventId and student info)\n// export const registerForEvent = (data) => axios.post(`${BASE_URL}/events/register`, data);\n// // Cancel event registration (expects eventId and student info)\n// export const cancelEventRegistration = (data) => axios.post(`${BASE_URL}/events/cancel`, data);","map":{"version":3,"names":["axios","BASE_URL","login","data","post","register","getEvents","get","requestEvent","getRequestedEvents","approveEventRequest","requestId","createEvent"],"sources":["C:/Users/Rohail/Desktop/3rd year project/college-event/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = \"http://localhost:8081/api\"; // adjust if needed\r\n\r\nexport const login = (data) => axios.post(`${BASE_URL}/auth/login`, data);\r\nexport const register = (data) => axios.post(`${BASE_URL}/auth/register`, data);\r\n\r\n// Fetch all upcoming events\r\nexport const getEvents = () => axios.get(`${BASE_URL}/events/all-events`);\r\n\r\n// Faculty requests event (sends info to admin for approval)\r\nexport const requestEvent = (data) => axios.post(`${BASE_URL}/event-proposal/request-event`, data);\r\n\r\n// Admin: get all requested events\r\nexport const getRequestedEvents = () => axios.get(`${BASE_URL}/event-proposal/all-requested-events`);\r\n\r\n// Admin: approve a requested event\r\nexport const approveEventRequest = (requestId) => axios.post(`${BASE_URL}/event-proposal/approve-event/${requestId}`);\r\n\r\n// After admin approval, faculty creates event (final registration)\r\nexport const createEvent = (data) => axios.post(`${BASE_URL}/events/create-event`, data);\r\n\r\n// // Fetch events registered by a student (expects student id or email)\r\n// export const getRegisteredEvents = (studentIdOrEmail) => axios.get(`${BASE_URL}/events/registered`, { params: { student: studentIdOrEmail } });\r\n\r\n// // Register for an event (expects eventId and student info)\r\n// export const registerForEvent = (data) => axios.post(`${BASE_URL}/events/register`, data);\r\n\r\n// // Cancel event registration (expects eventId and student info)\r\n// export const cancelEventRegistration = (data) => axios.post(`${BASE_URL}/events/cancel`, data);"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,QAAQ,CAAG,2BAA2B,CAAE;AAE9C,MAAO,MAAM,CAAAC,KAAK,CAAIC,IAAI,EAAKH,KAAK,CAACI,IAAI,CAAC,GAAGH,QAAQ,aAAa,CAAEE,IAAI,CAAC,CACzE,MAAO,MAAM,CAAAE,QAAQ,CAAIF,IAAI,EAAKH,KAAK,CAACI,IAAI,CAAC,GAAGH,QAAQ,gBAAgB,CAAEE,IAAI,CAAC,CAE/E;AACA,MAAO,MAAM,CAAAG,SAAS,CAAGA,CAAA,GAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,QAAQ,oBAAoB,CAAC,CAEzE;AACA,MAAO,MAAM,CAAAO,YAAY,CAAIL,IAAI,EAAKH,KAAK,CAACI,IAAI,CAAC,GAAGH,QAAQ,+BAA+B,CAAEE,IAAI,CAAC,CAElG;AACA,MAAO,MAAM,CAAAM,kBAAkB,CAAGA,CAAA,GAAMT,KAAK,CAACO,GAAG,CAAC,GAAGN,QAAQ,sCAAsC,CAAC,CAEpG;AACA,MAAO,MAAM,CAAAS,mBAAmB,CAAIC,SAAS,EAAKX,KAAK,CAACI,IAAI,CAAC,GAAGH,QAAQ,iCAAiCU,SAAS,EAAE,CAAC,CAErH;AACA,MAAO,MAAM,CAAAC,WAAW,CAAIT,IAAI,EAAKH,KAAK,CAACI,IAAI,CAAC,GAAGH,QAAQ,sBAAsB,CAAEE,IAAI,CAAC,CAExF;AACA;AAEA;AACA;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}