{"ast":null,"code":"import axios from 'axios';\nimport { withCORS } from '../utils/corsProxy';\nconst BASE_URL = \"http://localhost:8081/api\"; // adjust if needed\n\nexport const login = data => axios.post(`${BASE_URL}/auth/login`, data);\nexport const register = data => axios.post(`${BASE_URL}/auth/register`, data);\nexport const registerFaculty = data => axios.post(`${BASE_URL}/admin/add-faculty`, data);\n\n// Fetch all upcoming events\nexport const getEvents = () => axios.get(`${BASE_URL}/events/all-events`);\n\n// Faculty requests event (sends info to admin for approval)\nexport const requestEvent = data => axios.post(`${BASE_URL}/events/request-event`, data);\n\n// Admin: get all requested events\nexport const getRequestedEvents = () => axios.get(`${BASE_URL}/events/all-requested-events`);\n\n// Admin: approve a requested event\nexport const approveEventRequest = requestId => axios.post(`${BASE_URL}/events/approve-event/${requestId}`);\n\n// Admin: reject a requested event\nexport const rejectEventRequest = requestId => axios.post(`${BASE_URL}/events/reject-event/${requestId}`);\n\n// After admin approval, faculty creates event (final registration)\nexport const createEvent = data => axios.post(`${BASE_URL}/events/create-event`, data);\n\n// Fetch event by ID\nexport const getEventById = eventId => axios.get(`${BASE_URL}/events/event-by-id/${eventId}`);\n\n// Admin: modify event request with remarks - try various approaches to bypass CORS issues\nexport const modifyEventRequest = (requestId, eventData) => {\n  // Try simple approach with URL parameters \n  return axios.post(`${BASE_URL}/events/modify-event?id=${requestId}`, eventData);\n};\n\n// Fetch all events requested by a specific faculty\nexport const getEventsByFacultyId = facultyId => axios.get(`${BASE_URL}/events/all-requested-events/${facultyId}`);\n\n// // Fetch events registered by a student (expects student id or email)\n// export const getRegisteredEvents = (studentIdOrEmail) => axios.get(`${BASE_URL}/events/registered`, { params: { student: studentIdOrEmail } });\n\n// // Register for an event (expects eventId and student info)\n// export const registerForEvent = (data) => axios.post(`${BASE_URL}/events/register`, data);\n\n// // Cancel event registration (expects eventId and student info)\n// export const cancelEventRegistration = (data) => axios.post(`${BASE_URL}/events/cancel`, data);","map":{"version":3,"names":["axios","withCORS","BASE_URL","login","data","post","register","registerFaculty","getEvents","get","requestEvent","getRequestedEvents","approveEventRequest","requestId","rejectEventRequest","createEvent","getEventById","eventId","modifyEventRequest","eventData","getEventsByFacultyId","facultyId"],"sources":["C:/Users/Rohail/Desktop/3rd year project/college-event/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { withCORS } from '../utils/corsProxy';\r\n\r\nconst BASE_URL = \"http://localhost:8081/api\"; // adjust if needed\r\n\r\nexport const login = (data) => axios.post(`${BASE_URL}/auth/login`, data);\r\nexport const register = (data) => axios.post(`${BASE_URL}/auth/register`, data);\r\nexport const registerFaculty = (data) => axios.post(`${BASE_URL}/admin/add-faculty`, data);\r\n\r\n// Fetch all upcoming events\r\nexport const getEvents = () => axios.get(`${BASE_URL}/events/all-events`);\r\n\r\n// Faculty requests event (sends info to admin for approval)\r\nexport const requestEvent = (data) => axios.post(`${BASE_URL}/events/request-event`, data);\r\n\r\n// Admin: get all requested events\r\nexport const getRequestedEvents = () => axios.get(`${BASE_URL}/events/all-requested-events`);\r\n\r\n// Admin: approve a requested event\r\nexport const approveEventRequest = (requestId) => axios.post(`${BASE_URL}/events/approve-event/${requestId}`);\r\n\r\n// Admin: reject a requested event\r\nexport const rejectEventRequest = (requestId) => axios.post(`${BASE_URL}/events/reject-event/${requestId}`);\r\n\r\n// After admin approval, faculty creates event (final registration)\r\nexport const createEvent = (data) => axios.post(`${BASE_URL}/events/create-event`, data);\r\n\r\n// Fetch event by ID\r\nexport const getEventById = (eventId) => axios.get(`${BASE_URL}/events/event-by-id/${eventId}`);\r\n\r\n// Admin: modify event request with remarks - try various approaches to bypass CORS issues\r\nexport const modifyEventRequest = (requestId, eventData) => {\r\n  // Try simple approach with URL parameters \r\n  return axios.post(`${BASE_URL}/events/modify-event?id=${requestId}`, eventData);\r\n};\r\n\r\n// Fetch all events requested by a specific faculty\r\nexport const getEventsByFacultyId = (facultyId) => axios.get(`${BASE_URL}/events/all-requested-events/${facultyId}`);\r\n\r\n// // Fetch events registered by a student (expects student id or email)\r\n// export const getRegisteredEvents = (studentIdOrEmail) => axios.get(`${BASE_URL}/events/registered`, { params: { student: studentIdOrEmail } });\r\n\r\n// // Register for an event (expects eventId and student info)\r\n// export const registerForEvent = (data) => axios.post(`${BASE_URL}/events/register`, data);\r\n\r\n// // Cancel event registration (expects eventId and student info)\r\n// export const cancelEventRegistration = (data) => axios.post(`${BASE_URL}/events/cancel`, data);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,MAAMC,QAAQ,GAAG,2BAA2B,CAAC,CAAC;;AAE9C,OAAO,MAAMC,KAAK,GAAIC,IAAI,IAAKJ,KAAK,CAACK,IAAI,CAAC,GAAGH,QAAQ,aAAa,EAAEE,IAAI,CAAC;AACzE,OAAO,MAAME,QAAQ,GAAIF,IAAI,IAAKJ,KAAK,CAACK,IAAI,CAAC,GAAGH,QAAQ,gBAAgB,EAAEE,IAAI,CAAC;AAC/E,OAAO,MAAMG,eAAe,GAAIH,IAAI,IAAKJ,KAAK,CAACK,IAAI,CAAC,GAAGH,QAAQ,oBAAoB,EAAEE,IAAI,CAAC;;AAE1F;AACA,OAAO,MAAMI,SAAS,GAAGA,CAAA,KAAMR,KAAK,CAACS,GAAG,CAAC,GAAGP,QAAQ,oBAAoB,CAAC;;AAEzE;AACA,OAAO,MAAMQ,YAAY,GAAIN,IAAI,IAAKJ,KAAK,CAACK,IAAI,CAAC,GAAGH,QAAQ,uBAAuB,EAAEE,IAAI,CAAC;;AAE1F;AACA,OAAO,MAAMO,kBAAkB,GAAGA,CAAA,KAAMX,KAAK,CAACS,GAAG,CAAC,GAAGP,QAAQ,8BAA8B,CAAC;;AAE5F;AACA,OAAO,MAAMU,mBAAmB,GAAIC,SAAS,IAAKb,KAAK,CAACK,IAAI,CAAC,GAAGH,QAAQ,yBAAyBW,SAAS,EAAE,CAAC;;AAE7G;AACA,OAAO,MAAMC,kBAAkB,GAAID,SAAS,IAAKb,KAAK,CAACK,IAAI,CAAC,GAAGH,QAAQ,wBAAwBW,SAAS,EAAE,CAAC;;AAE3G;AACA,OAAO,MAAME,WAAW,GAAIX,IAAI,IAAKJ,KAAK,CAACK,IAAI,CAAC,GAAGH,QAAQ,sBAAsB,EAAEE,IAAI,CAAC;;AAExF;AACA,OAAO,MAAMY,YAAY,GAAIC,OAAO,IAAKjB,KAAK,CAACS,GAAG,CAAC,GAAGP,QAAQ,uBAAuBe,OAAO,EAAE,CAAC;;AAE/F;AACA,OAAO,MAAMC,kBAAkB,GAAGA,CAACL,SAAS,EAAEM,SAAS,KAAK;EAC1D;EACA,OAAOnB,KAAK,CAACK,IAAI,CAAC,GAAGH,QAAQ,2BAA2BW,SAAS,EAAE,EAAEM,SAAS,CAAC;AACjF,CAAC;;AAED;AACA,OAAO,MAAMC,oBAAoB,GAAIC,SAAS,IAAKrB,KAAK,CAACS,GAAG,CAAC,GAAGP,QAAQ,gCAAgCmB,SAAS,EAAE,CAAC;;AAEpH;AACA;;AAEA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}